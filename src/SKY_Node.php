<?php


namespace SkyCoin;


use App\Coins\Wallets\Transaction;
use App\Coins\Wallets\Wallet;
use App\Models\Arrays\MatchedAddressesArray;
use App\User\User;
use BitcoinRPC\BitcoinRPC;

class SKY_Node extends AbstractNodeServer
{

    public function wallet(\App\Coins\Wallets\Wallet $wallet): AbstractNodeServer
    {
        return parent::wallet($wallet); // TODO: Change the autogenerated stub
    }

    public function allocateWallet(User $user, string $label): Wallet
    {
        // TODO: Implement allocateWallet() method.
    }

    public function ping(): void
    {

    }

    public function createAddress(?string $password = null): string
    {
        // TODO: Implement createAddress() method.
    }

    public function isValidAddress(string $addr): bool
    {
        // TODO: Implement isValidAddress() method.
    }

    public function transaction(string $txId): Transaction
    {
        // TODO: Implement transaction() method.
    }

    public function walletBalance(?int $confirmations = 0): ?string
    {
        // TODO: Implement walletBalance() method.
    }

    public function balance(?int $confirmations = null, ?string $units = null, ?string $address = null): string
    {
        // TODO: Implement balance() method.
    }

    public function send(array $inputs, array $outputs, ?string $units = null, ?string $fee = null, ?string $memo = null): string
    {
        // TODO: Implement send() method.
    }

    public function archiveTx(Transaction $transaction, ?MatchedAddressesArray $matchedAddresses = null, bool $reIndex = true): bool
    {
        // TODO: Implement archiveTx() method.
    }

}